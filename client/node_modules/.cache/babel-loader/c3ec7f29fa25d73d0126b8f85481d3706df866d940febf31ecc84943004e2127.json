{"ast":null,"code":"var _jsxFileName = \"/Users/demitryedwards/Development/code/phase-4/Flatiron_Gang/client/src/components/UserSignup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserSignup = () => {\n  _s();\n  const [users, setUsers] = useState([{}]);\n  const [refreshPage, setRefreshPage] = useState(false);\n  // Pass the useFormik() hook initial form values and a submit function that will\n  // be called when the form is submitted\n\n  useEffect(() => {\n    console.log(\"FETCH! \");\n    fetch(\"/users\").then(res => res.json()).then(data => {\n      setUsers(data);\n      console.log(data);\n    });\n  }, [refreshPage]);\n  const formSchema = yup.object().shape({\n    name: yup.string().required(\"Must enter a name\").max(16),\n    username: yup.string().required(\"Must enter a username\").max(14),\n    password: yup.string().password().required(\"Must enter password\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      username: \"\",\n      password: \"\"\n    },\n    validationSchema: formSchema,\n    onSubmit: values => {\n      fetch(\"users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(values, null, 2)\n      }).then(res => {\n        if (res.status === 200) {\n          setRefreshPage(!refreshPage);\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      style: {\n        margin: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        name: \"name\",\n        onChange: formik.handleChange,\n        value: formik.values.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: [\" \", formik.errors.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        name: \"username\",\n        onChange: formik.handleChange,\n        value: formik.values.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: [\" \", formik.errors.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        name: \"password\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: [\" \", formik.errors.password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(UserSignup, \"XtvkV39t6ScBinJ3w6QPKb/Pmfk=\", false, function () {\n  return [useFormik];\n});\n_c = UserSignup;\nvar _c;\n$RefreshReg$(_c, \"UserSignup\");","map":{"version":3,"names":["React","useEffect","useState","useFormik","yup","jsxDEV","_jsxDEV","UserSignup","_s","users","setUsers","refreshPage","setRefreshPage","console","log","fetch","then","res","json","data","formSchema","object","shape","name","string","required","max","username","password","formik","initialValues","validationSchema","onSubmit","values","method","headers","body","JSON","stringify","status","children","handleSubmit","style","margin","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","handleChange","value","color","errors","type","_c","$RefreshReg$"],"sources":["/Users/demitryedwards/Development/code/phase-4/Flatiron_Gang/client/src/components/UserSignup.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\n\nexport const UserSignup = () => {\n  const [users, setUsers] = useState([{}]);\n  const [refreshPage, setRefreshPage] = useState(false);\n  // Pass the useFormik() hook initial form values and a submit function that will\n  // be called when the form is submitted\n\n  useEffect(() => {\n    console.log(\"FETCH! \");\n    fetch(\"/users\")\n      .then((res) => res.json())\n      .then((data) => {\n        setUsers(data);\n        console.log(data);\n      });\n  }, [refreshPage]);\n\n  const formSchema = yup.object().shape({\n    name: yup.string().required(\"Must enter a name\").max(16),\n    username: yup.string().required(\"Must enter a username\").max(14),\n    password: yup.string().password().required(\"Must enter password\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      username: \"\",\n      password: \"\",\n    },\n    validationSchema: formSchema,\n    onSubmit: (values) => {\n      fetch(\"users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(values, null, 2),\n      }).then((res) => {\n        if (res.status === 200) {\n          setRefreshPage(!refreshPage);\n        }\n      });\n    },\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit} style={{ margin: \"30px\" }}>\n        <label htmlFor=\"name\">Name</label>\n        <br />\n        <input\n          id=\"name\"\n          name=\"name\"\n          onChange={formik.handleChange}\n          value={formik.values.name}\n        />\n        <p style={{ color: \"red\" }}> {formik.errors.name}</p>\n        <label htmlFor=\"username\">Username</label>\n        <br />\n\n        <input\n          id=\"username\"\n          name=\"username\"\n          onChange={formik.handleChange}\n          value={formik.values.username}\n        />\n        <p style={{ color: \"red\" }}> {formik.errors.username}</p>\n\n        <label htmlFor=\"password\">Password</label>\n        <br />\n\n        <input\n          id=\"password\"\n          name=\"password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n        />\n        <p style={{ color: \"red\" }}> {formik.errors.password}</p>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}