{"ast":null,"code":"var _jsxFileName = \"/Users/yemiarimoro/Development/code/phase-4/Flatiron_Gang/client/src/components/FantasyTeams.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FantasyTeams() {\n  _s();\n  const [teams, setTeams] = useState([]);\n\n  // Function to fetch teams from the backend\n  const fetchTeams = async () => {\n    try {\n      const response = await fetch('/api/teams'); // Replace '/api/teams' with the actual API endpoint for fetching teams\n      const data = await response.json();\n      setTeams(data);\n    } catch (error) {\n      console.error('Error fetching teams:', error);\n    }\n  };\n\n  // Function to create a new team\n  const createTeam = async teamData => {\n    try {\n      const response = await fetch('/api/teams', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(teamData)\n      });\n      const newTeam = await response.json();\n      setTeams([...teams, newTeam]);\n    } catch (error) {\n      console.error('Error creating team:', error);\n    }\n  };\n\n  // Function to update an existing team\n  const updateTeam = async (teamId, teamData) => {\n    try {\n      const response = await fetch(`/api/teams/${teamId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(teamData)\n      });\n      const updatedTeam = await response.json();\n      const updatedTeams = teams.map(team => team.id === teamId ? updatedTeam : team);\n      setTeams(updatedTeams);\n    } catch (error) {\n      console.error('Error updating team:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTeams();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fantasy Teams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: teams.map(team => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: team.name\n      }, team.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => createTeam({\n        name: 'New Team'\n      }),\n      children: \"Create Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => updateTeam(1, {\n        name: 'Updated Team'\n      }) // Replace 1 with the ID of the team you want to update\n      ,\n      children: \"Update Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(FantasyTeams, \"nt+I693XwTdNiKlXHWfWa22BjIk=\");\n_c = FantasyTeams;\nexport default FantasyTeams;\nvar _c;\n$RefreshReg$(_c, \"FantasyTeams\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FantasyTeams","_s","teams","setTeams","fetchTeams","response","fetch","data","json","error","console","createTeam","teamData","method","headers","body","JSON","stringify","newTeam","updateTeam","teamId","updatedTeam","updatedTeams","map","team","id","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","_c","$RefreshReg$"],"sources":["/Users/yemiarimoro/Development/code/phase-4/Flatiron_Gang/client/src/components/FantasyTeams.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction FantasyTeams() {\n  const [teams, setTeams] = useState([]);\n\n  // Function to fetch teams from the backend\n  const fetchTeams = async () => {\n    try {\n      const response = await fetch('/api/teams'); // Replace '/api/teams' with the actual API endpoint for fetching teams\n      const data = await response.json();\n      setTeams(data);\n    } catch (error) {\n      console.error('Error fetching teams:', error);\n    }\n  };\n\n  // Function to create a new team\n  const createTeam = async (teamData) => {\n    try {\n      const response = await fetch('/api/teams', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(teamData),\n      });\n      const newTeam = await response.json();\n      setTeams([...teams, newTeam]);\n    } catch (error) {\n      console.error('Error creating team:', error);\n    }\n  };\n\n  // Function to update an existing team\n  const updateTeam = async (teamId, teamData) => {\n    try {\n      const response = await fetch(`/api/teams/${teamId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(teamData),\n      });\n      const updatedTeam = await response.json();\n      const updatedTeams = teams.map((team) =>\n        team.id === teamId ? updatedTeam : team\n      );\n      setTeams(updatedTeams);\n    } catch (error) {\n      console.error('Error updating team:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTeams();\n  }, []);\n\n  return (\n    <div>\n      <h1>Fantasy Teams</h1>\n      <ul>\n        {teams.map((team) => (\n          <li key={team.id}>{team.name}</li>\n        ))}\n      </ul>\n      <button onClick={() => createTeam({ name: 'New Team' })}>\n        Create Team\n      </button>\n      <button\n        onClick={() => updateTeam(1, { name: 'Updated Team' })} // Replace 1 with the ID of the team you want to update\n      >\n        Update Team\n      </button>\n    </div>\n  );\n}\n\nexport default FantasyTeams;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;MAC5C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,QAAQ,CAACI,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;;EAED;EACA,MAAME,UAAU,GAAG,MAAOC,QAAQ,IAAK;IACrC,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACzCO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;MAC/B,CAAC,CAAC;MACF,MAAMM,OAAO,GAAG,MAAMb,QAAQ,CAACG,IAAI,CAAC,CAAC;MACrCL,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEgB,OAAO,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;;EAED;EACA,MAAMU,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAER,QAAQ,KAAK;IAC7C,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAac,MAAO,EAAC,EAAE;QACnDP,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;MAC/B,CAAC,CAAC;MACF,MAAMS,WAAW,GAAG,MAAMhB,QAAQ,CAACG,IAAI,CAAC,CAAC;MACzC,MAAMc,YAAY,GAAGpB,KAAK,CAACqB,GAAG,CAAEC,IAAI,IAClCA,IAAI,CAACC,EAAE,KAAKL,MAAM,GAAGC,WAAW,GAAGG,IACrC,CAAC;MACDrB,QAAQ,CAACmB,YAAY,CAAC;IACxB,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdO,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB/B,OAAA;MAAA2B,QAAA,EACGxB,KAAK,CAACqB,GAAG,CAAEC,IAAI,iBACdzB,OAAA;QAAA2B,QAAA,EAAmBF,IAAI,CAACO;MAAI,GAAnBP,IAAI,CAACC,EAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACL/B,OAAA;MAAQiC,OAAO,EAAEA,CAAA,KAAMrB,UAAU,CAAC;QAAEoB,IAAI,EAAE;MAAW,CAAC,CAAE;MAAAL,QAAA,EAAC;IAEzD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT/B,OAAA;MACEiC,OAAO,EAAEA,CAAA,KAAMb,UAAU,CAAC,CAAC,EAAE;QAAEY,IAAI,EAAE;MAAe,CAAC,CAAE,CAAC;MAAA;MAAAL,QAAA,EACzD;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC7B,EAAA,CAzEQD,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AA2ErB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}